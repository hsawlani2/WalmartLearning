<apex:component allowDML="true">
    <apex:attribute name="bdCon" type="BD2Controller" required="true" description="handle to QuestionnaireController" />
<!--     <apex:stylesheet value="{!URLFOR($Resource.jQueryValidation, 'jquery-ui.css')}"/> -->
<!--     <apex:includeScript value="{!URLFOR($Resource.jQueryValidation, 'jquery-ui.js')}"/> -->
<!--     <apex:includeScript value="{!URLFOR($Resource.jQueryValidation, 'jquery.validate.min.js')}"/> -->

        <style>    
        .error{
             margin: 0 !important;
             color: #E04C4C !important;
         }
         .checkboxAlign{
            padding-top:25px;
         }
        </style>   
        
        <script type="text/javascript"> 
         
        /*$(document).ready(function() {
             
            /*$('[id$=TechnicalContactInfo]').validate();             
              
            $('[id$=firstName]').rules("add",{
                required: true,
                
            });     
            
            $('[id$=lastName]').rules("add",{
                required: true,
                
            }); 
           
            $('[id$=Email]').rules("add",{
                required: true,
               
            }); 
            
            $('[id$=confirmEmail]').rules("add",{
                required: true,
                equalTo: '[id$=Email]'
            }); 
            
            $('[id$=phone]').rules("add",{
                required: true,
                
            });    
            
            $('[id$=MobilePhone]').rules("add",{
                required: true,
                
            });* / 
            
            /* Customised the messages * /
           // jQuery.validator.messages.required = "You better have entered a value.. or else!"; 
           // jQuery.validator.messages.equalTo = "You're supposed to type the same set of characters AGAIN.";  
           
           sameasprimarychange();
                                                         
        });*/
        function sameasprimarychange(){
        
            var bChecked = $('[id$=idSameasprimary]').is(':checked');
            if(bChecked==true){
                $('[id$=idtechnicalcontact]').hide();
                $('[id$=idleadcontact]').show();
                var businesscompleted = $("[id$='idBusinessInformationCompleted']").val();
                                  var productAssortmentcompleted = $("[id$='idProductAssortmentCompleted']").val();
                                  var ecommercecompleted = $("[id$='idEcommerceCompleted']").val();
                                  var operationscompleted = $("[id$='idOperationsCompleted']").val();
                                  if(businesscompleted == "true" && productAssortmentcompleted=="true" && ecommercecompleted == "true" && operationscompleted == "true"){
                                      $("[id$='Apply']").prop('disabled',false);
                                  }
                                  $('[id$=firstName1]').rules("remove"); 
                                  $('[id$=lastName1]').rules("remove");
                                  $('[id$=Email1]').rules("remove");
                                  $('[id$=confirmEmail1]').rules("remove");
                                  $('[id$=phone1]').rules("remove");    
                                  $('[id$=MobilePhone1]').rules("remove");    
            }
            else{
             $('[id$=idtechnicalcontact]').show();
                $('[id$=idleadcontact]').hide();
                
                addtcvalidations();
            }
            
        }
        
        $.validator.addMethod(
                                        "money", 
                                        function(value, element) {
                                            //var isValidMoney = /^((\d{1,3}\,)*\d{3}|\d{1,3})\.\d{2}$|^((\d{1,3}\.)*\d{3}|\d{1,3})\,\d{2}$/.test(value);                    
                                            
                                            //Ashok start
                                            /*
                                            var isValidMoney = /^\\$((\d{1,3}\,)*\d{3}|\d{1,3})\.\d{2}$|^((\d{1,3}\.)*\d{3}|\d{1,3})\,\d{2}$/.test(value);
                                            */
                                            //var isValidMoney = /^\\$((\d{1,3}\,)*\d{3}|\d{1,3})(\.(\d){1,})*$/.test(value);
                                            var isValidMoney = /^\\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(\.[0-9][0-9])?$/.test(value);
                                            //Ashok End
                                            
                                            return this.optional(element) || isValidMoney;
                                        }, 
                                        "Please specify a valid amount. You must use this format: $000,000.00"
                                    );
                                    
                                    $.validator.addMethod(
                                        "percentageValue", 
                                        function(value, element) {
                                            var isValidPercentage = /^(\d{0,2}(\.\d{0,2})?|100(\.00?)?)$/.test(value);
                                            return this.optional(element) || isValidPercentage;
                                        }, 
                                        "Please specify a valid percentage value. You must use this format XX.XX"
                                    );
                                    
                                                                
                                    $.validator.addMethod(
                                        "regex",
                                        function(value, element, regexp) {
                                            var re = new RegExp(regexp);
                                            return this.optional(element) || re.test(value);
                                        },          
                                        "Please check your input. You must use this format: XX-XXXXXXX"
                                    );
                                    
                                    $.validator.addMethod(
                                        "compWebsite",
                                        function(value, element, regexp) {
                                            var re = new RegExp(regexp);
                                            return this.optional(element) || re.test(value);
                                        },          
                                        "Please check your input. You must enter correct URL"
                                    );
                                                
                                    $.validator.addMethod(
                                        "mobilenumber",
                                        function(value, element, regexp) {
                                            var re = new RegExp(regexp);
                                            return this.optional(element) || re.test(value);
                                        },          
                                        "Please check your input. You must use this format: (999) 999-9999"
                                    );
                                                
                                    $.validator.addMethod(
                                        "notFuture",
                                        function(value, element) {
                                            return parseInt(value) <= parseInt(new Date().getFullYear())
                                        },
                                        "Should be on or before the current year."
                                    );
                                    
                                    $.validator.addMethod(
                                     "validFirstName", 
                                     function(value, element) {
                                         var isValidFirstName = /^[^<>;]*$/.test(value);
                                         return this.optional(element) || isValidFirstName;
                                     }, 
                                     "First Name should not contain the following characters: \">\", \"<\", \";\" "
                                 );
                                 $.validator.addMethod(
                                     "validLastName", 
                                     function(value, element) {
                                         var isValidLastName = /^[^<>;]*$/.test(value);
                                         return this.optional(element) || isValidLastName;
                                     }, 
                                     "Last Name should not contain the following characters: \">\", \"<\", \";\" "
                                 );
                                 $.validator.addMethod(
                                     "validAddressLine1", 
                                     function(value, element) {
                                         var isValidAddressLine1 = /^[^<>;]*$/.test(value);
                                         return this.optional(element) || isValidAddressLine1;
                                     }, 
                                     "Address Line 1 should not contain the following characters: \">\", \"<\", \";\" "
                                 );
                                
                                 $.validator.addMethod(
                                     "validAddressLine2", 
                                     function(value, element) {
                                         var isValidAddressLine2 = /^[^<>;]*$/.test(value);
                                         return this.optional(element) || isValidAddressLine2;
                                     }, 
                                     "Address Line 2 should not contain the following characters: \">\", \"<\", \";\" "
                                 );
                                 $.validator.addMethod(
                                     "validCompanyName", 
                                     function(value, element) {
                                         var isValidCompanyName = /^[^<>;]*$/.test(value);
                                         return this.optional(element) || isValidCompanyName;
                                     }, 
                                     "Company Name should not contain the following characters: \">\", \"<\", \";\" "
                                 ); 
                                
                                 $.validator.addMethod(
                                 "compareWithemail", 
                                 function(value, element,otherEmail) {
                                    var otheremailvalue = $("[id$='"+otherEmail+"']").val();
                                  return value == otheremailvalue ? true:false;
                                 },
                                 "Confirm email should match."
                                 );
                                 $.validator.addMethod(
                                      "compareWithValue", 
                                      function(value, element) {
                                          var revenueValue = Number($('[id$=usSalesRevenueonlineonly]').val().replace('$','').replace(/,/g,''));
                                          console.log('value'+'-->' + value);
                                          console.log('revenueValue'+'-->' + revenueValue);
                                          return Number(value.replace('$','').replace(/,/g,'')) >= revenueValue ? true:false;
                                      },
                                      "Should be greater or equal to last 12 months online sales revenue."
                                  );
                                  
                                  $.validator.addMethod(
                                      "compareWithTotal", 
                                      function(value, element) {
                                          var totalValue = Number($('[id$=usSalesRevenue]').val().replace('$','').replace(/,/g,''));
                                          console.log('totalValue'+'-->' + totalValue);
                                          console.log('value'+'-->' + value);
                                          return Number(value.replace('$','').replace(/,/g,'')) <= totalValue ? true:false;
                                      },
                                      "Should be less or equal to last 12 months total sales revenue."
                                  );
        
        function addeventhandler(){
            jQuery("[id$='idSameasprimary'],[id$='firstName1'],[id$='lastName1'],[id$='Email1'],[id$='confirmEmail1'],[id$='phone1'],[id$='idext1'],[id$='MobilePhone1'],[id$='idPermissiontotext1']").change(function( event ){
              bTechnicalContactChanged = true;
            });
        }
        function updatetechnicalcontact(){
                            if($('[id$=frmTechnicalContactInfo]').valid()){
                                updatefrmTechnicalContactInfo();
                            }
                          }
         
    </script>   
<apex:form id="frmTechnicalContactInfo">
<apex:actionFunction name="updatefrmTechnicalContactInfo" action="{!bdCon.updatetechnicalcontact}" rerender="pnlMain" status="processingStatus" />
<!-- <form data-toggle="validator" role="form"> -->    
  
    <div class="row">  
       <div class="col-sm-3">
          <label></label>
          <label class="dropdown">
          <apex:inputcheckbox value="{!bdCon.oApplication.Same_as_Primary_Contact__c}" id="idSameasprimary" onclick="sameasprimarychange();" rendered="{!bdCon.isApplicationCreated == true}"/>
          <apex:inputcheckbox value="{!bdCon.oApplication.Same_as_Primary_Contact__c}" disabled="true" rendered="{!bdCon.isApplicationCreated != true}"/>
          Same As Primary Contact</label>
        </div>
    </div>
                                <apex:outputpanel id="idtechnicalcontact">
        <div class="form-group">
            <div class="row">
              <div class="col-sm-3">
               <label for="inputdefault" class="dropdown">First Name</label>
                  <apex:inputField value="{!bdCon.oApplication.Secondary_Contact_First_Name__c}" styleClass="aside" rendered="{!bdCon.isApplicationCreated == true}"   id="firstName1" html-data-error="First Name is Required."/>
<!--                                                                <apex:outputText value="{!bdCon.oApplication.Secondary_Contact_First_Name__c}" styleClass="asideNoBorder" rendered="{!bdCon.isApplicationCreated != true}" /> -->
                                                                <apex:inputText value="{!bdCon.oApplication.Secondary_Contact_First_Name__c}" styleClass="disabledBackgroundColor aside" rendered="{!bdCon.isApplicationCreated != true}"  disabled="true"/>    
              </div>
              
              
              <div class="col-sm-3">
               <label for="inputdefault" class="dropdown">Last Name</label>
                  <apex:inputField value="{!bdCon.oApplication.Secondary_Contact_Last_Name__c}" id="lastName1" styleClass="aside" rendered="{!bdCon.isApplicationCreated == true}"   html-data-error="Last Name is Required." />
<!--                   <apex:outputText value="{!bdCon.oApplication.Secondary_Contact_Last_Name__c}" styleClass="asideNoBorder" rendered="{!bdCon.isApplicationCreated != true}" /> -->
                                                                        <apex:inputText value="{!bdCon.oApplication.Secondary_Contact_Last_Name__c}" styleClass="disabledBackgroundColor aside" rendered="{!bdCon.isApplicationCreated != true}"  disabled="true"/>
              </div>
        </div>
          
          
        </div>
  
      <div class="form-group">
            <div class="row">
          
              <div class="col-sm-3">
                <label for="inputdefault" class="dropdown">Email Address</label>
                  <apex:inputField value="{!bdCon.oApplication.Secondary_Contact_Email__c}" styleClass="aside" rendered="{!bdCon.isApplicationCreated == true}" id="Email1"   html-data-error="Email is Required."/>
<!--                   <apex:outputText value="{!bdCon.oApplication.Secondary_Contact_Email__c}" styleClass="asideNoBorder" rendered="{!bdCon.isApplicationCreated != true}" /> -->
                                                                                            <apex:inputText value="{!bdCon.oApplication.Secondary_Contact_Email__c}" styleClass="disabledBackgroundColor aside" rendered="{!bdCon.isApplicationCreated != true}"  disabled="true"/>
                
                  </div>
                  
              <div class="col-sm-3">
              <label for="inputdefault" class="dropdown">Confirm Email Address</label>
                  <apex:inputText value="{!bdCon.oApplication.Secondary_Contact_Email__c}" id="confirmEmail1" styleClass="aside" rendered="{!bdCon.isApplicationCreated == true}"  html-data-error="Email is Required."/>
<!--                   <apex:outputText value="{!bdCon.oApplication.Secondary_Contact_Email__c}" styleClass="asideNoBorder" rendered="{!bdCon.isApplicationCreated != true}" /> -->
                 <apex:inputText value="{!bdCon.oApplication.Secondary_Contact_Email__c}" styleClass="disabledBackgroundColor aside" rendered="{!bdCon.isApplicationCreated != true}"  disabled="true"/>
              </div>
          
        </div>
      </div>
 
      <div class="form-group">
        <div class="row">
      
          <div class="col-sm-3">
            <label for="inputdefault" class="dropdown">Phone</label>
              <apex:inputField value="{!bdCon.oApplication.Secondary_Contact_Phone__c}" id="phone1" styleClass="aside" rendered="{!bdCon.isApplicationCreated == true}" html-data-mask="999-999-9999" html-placeholder="xxx-xxx-xxxx" html-data-error="Phone is Required."/>
<!--               <apex:outputText value="{!bdCon.oApplication.Secondary_Contact_Phone__c}" styleClass="asideNoBorder" rendered="{!bdCon.isApplicationCreated != true}" /> -->
                                                        <apex:inputText value="{!bdCon.oApplication.Secondary_Contact_Phone__c}" styleClass="disabledBackgroundColor aside" rendered="{!bdCon.isApplicationCreated != true}"  disabled="true"/>
          </div>
          <div class="col-sm-1">
             <label for="inputdefault" class="dropdown">Ext.</label><br></br>
              <apex:inputText value="{!bdCon.oApplication.Secondary_Contact_Ext__c}" id="idext1" rendered="{!bdCon.isApplicationCreated == true}" styleClass="ext" html-placeholder="xxx"/>
<!--               <apex:outputText value="{!bdCon.oApplication.Secondary_Contact_Ext__c}" styleClass="asideNoBorder" rendered="{!bdCon.isApplicationCreated != true}" /> -->
                                                        <apex:inputText value="{!bdCon.oApplication.Secondary_Contact_Ext__c}" styleClass="disabledBackgroundColor aside ext" rendered="{!bdCon.isApplicationCreated != true}"  disabled="true"/>
          </div>      
          <div class="col-sm-3">
            <label for="inputdefault" class="dropdown">Mobile</label>
              <apex:inputField value="{!bdCon.oApplication.Secondary_Contact_Mobile__c}" styleClass="aside" rendered="{!bdCon.isApplicationCreated == true}" html-data-mask="999-999-9999" html-placeholder="xxx-xxx-xxxx" id="MobilePhone1"  />
<!--                                    <apex:outputText value="{!bdCon.oApplication.Secondary_Contact_Mobile__c}" styleClass="asideNoBorder" rendered="{!bdCon.isApplicationCreated != true}" /> -->
                                                        <apex:inputText value="{!bdCon.oApplication.Secondary_Contact_Mobile__c}" styleClass="disabledBackgroundColor aside" rendered="{!bdCon.isApplicationCreated != true}"  disabled="true"/>
          </div>
          <div class="col-sm-3">
                <label></label><br></br>
                <label class="dropdown checkboxAlign">
                <apex:inputcheckbox value="{!bdCon.oApplication.Permission_to_text__c}" rendered="{!bdCon.isApplicationCreated == true}" id="idPermissiontotext1" />
                <apex:inputcheckbox value="{!bdCon.oApplication.Permission_to_text__c}"  disabled="disabled" rendered="{!bdCon.isApplicationCreated != true}" /> 
                Permission To Text</label>
                
           </div>

        </div>
      </div>
                    </apex:outputpanel>
                    
                    <apex:outputpanel id="idleadcontact" style="display:none">
        <div class="form-group">
            <div class="row">
              <div class="col-sm-3">
               <label for="inputdefault" class="dropdown">First Name</label>
                                                            <!--<apex:outputText value="{!bdCon.oLead.firstName}" styleClass="asideNoBorder" /> -->
                                                         <apex:inputText value="{!bdCon.oLead.firstName}" styleClass="disabledBackgroundColor aside"   disabled="true"/>    
              </div>
              
              
              <div class="col-sm-3">
               <label for="inputdefault" class="dropdown">Last Name</label>
                  <!-- <apex:outputText value="{!bdCon.oLead.lastName}" styleClass="asideNoBorder"  /> -->
                  <apex:inputText value="{!bdCon.oLead.lastName}" styleClass="disabledBackgroundColor aside"   disabled="true"/>
              </div>
        </div>
          
          
        </div>
  
      <div class="form-group">
            <div class="row">
          
              <div class="col-sm-3">
                <label for="inputdefault" class="dropdown">Email Address</label>
                  <!--<apex:outputText value="{!bdCon.oLead.Email}" styleClass="asideNoBorder"  /> -->
                <apex:inputText value="{!bdCon.oLead.Email}" styleClass="disabledBackgroundColor aside"   disabled="true"/>
                  </div>
                  
              <div class="col-sm-3">
              <label for="inputdefault" class="dropdown">Confirm Email Address</label>
                  <!-- <apex:outputText value="{!bdCon.oLead.Email}" styleClass="asideNoBorder"  /> -->
                 <apex:inputText value="{!bdCon.oLead.Email}" styleClass="disabledBackgroundColor aside"   disabled="true"/> 
              </div>
          
        </div>
      </div>
 
      <div class="form-group">
        <div class="row">
          <div class="col-sm-3">
            <label for="inputdefault" class="dropdown">Phone</label>
              <!--<apex:outputText value="{!bdCon.oLead.Phone}" styleClass="asideNoBorder"  />-->
              <apex:inputText value="{!bdCon.oLead.Phone}" styleClass="disabledBackgroundColor aside"   disabled="true"/>
          </div>
          <div class="col-sm-1">
             <label for="inputdefault" class="dropdown">Ext.</label><br></br>
              <!-- <apex:outputText value="{!bdCon.oLead.Extension__c}" styleClass="asideNoBorder"  />-->
              <apex:inputText value="{!bdCon.oLead.Extension__c}" styleClass="disabledBackgroundColor aside ext"   disabled="true"/>
          </div>
          <div class="col-sm-3">
            <label for="inputdefault" class="dropdown">Mobile</label>
                                <!--<apex:outputText value="{!bdCon.oLead.MobilePhone}" styleClass="asideNoBorder"  />-->
                                <apex:inputText value="{!bdCon.oLead.MobilePhone}" styleClass="disabledBackgroundColor aside"   disabled="true"/>
          </div>
          <div class="col-sm-3">
                <label></label><br></br>
                <label  class="dropdown checkboxAlign" >
                <apex:inputcheckbox value="{!bdCon.oLead.et4ae5__HasOptedOutOfMobile__c}" disabled="true"  /> 
                Permission to Text
                </label>  
           </div>

        </div>
      </div>
                    </apex:outputpanel>
   
<!-- <div class="btn-group-sm pull-right"> -->
<!--     <div class="row"> -->
<!--     <apex:commandButton styleClass="btn btn-primary btn-size" value="Save" id="theButtontechnical" action="{!bdCon.updatetechnicalcontact}"/> -->
<!--      <button id="Apply" class="btn btn-success btn-size">Apply Now</button> -->
    
<!--     </div> -->
<!-- </div>  -->

   
  </apex:form>
<script>

    addeventhandler();
    function addtcvalidations(){
        if($('[id$=firstName1]').length>0){
                $('[id$=firstName1]').rules("add",{
             required: true,
         });     
         
         $('[id$=lastName1]').rules("add",{
             required: true,
             
         }); 
                
                $('[id$=Email1]').rules("add",{
            email: true,
            required: true
        });
        
        $('[id$=confirmEmail1]').rules("add",{
            required: true,
            email: true,
            compareWithemail:'Email1'
        });
        
        
        $('[id$=phone1]').rules("add",{
            required: true,
                    
        });
        
        $('[id$=MobilePhone1]').rules("add",{
            required: true,
            
        });
    }
   }
     $(document).ready(function() {
    
    $("[id$=frmTechnicalContactInfo]").validate({
         ignore: 'input[type=hidden], .select2-input',
         errorClass: 'validation-error-label',
         successClass: 'validation-valid-label',
         highlight: function(element, errorClass) {
             $(element).removeClass(errorClass);
         },
         unhighlight: function(element, errorClass) {
             $(element).removeClass(errorClass);
         },
         errorPlacement: function(error, element) {
             if (element.parents('div').hasClass("checker") || element.parents('div').hasClass("choice") || element.parent().hasClass('bootstrap-switch-container') ) {
                 if(element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
                     error.appendTo( element.parent().parent().parent().parent() );
                 }
                  else {
                     error.appendTo( element.parent().parent().parent().parent().parent() );
                 }
             }
             else if (element.parents('div').hasClass('checkbox') || element.parents('div').hasClass('radio')) {
                 error.appendTo( element.parent().parent().parent() );
             }
             else if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
                 error.appendTo( element.parent().parent() );
             }
             else if (element.parent().hasClass('uploader') || element.parents().hasClass('input-group')) {
                 error.appendTo( element.parent().parent() );
             }
             else {
                 error.insertAfter(element);
             }
         },
     }); 
    //addtcvalidations();
    sameasprimarychange();
 });
 
 
 
</script>
</apex:component>